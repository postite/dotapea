package parse5;

@:jsRequire("parse5", "Tokenizer") extern class Tokenizer {
	function new(options:TokenizerOptions, handler:TokenHandler);
	private var options : Dynamic;
	private var handler : Dynamic;
	var preprocessor : parse5.dist.tokenizer.preprocessor.Preprocessor;
	private var paused : Dynamic;
	/**
		Ensures that the parsing loop isn't run multiple times at once.
	**/
	private var inLoop : Dynamic;
	/**
		Indicates that the current adjusted node exists, is not an element in the HTML namespace,
		and that it is not an integration point for either MathML or HTML.
	**/
	var inForeignNode : Bool;
	var lastStartTagName : String;
	var active : Bool;
	var state : State;
	private var returnState : Dynamic;
	private var charRefCode : Dynamic;
	private var consumedAfterSnapshot : Dynamic;
	private var currentLocation : Dynamic;
	private var currentCharacterToken : Dynamic;
	private var currentToken : Dynamic;
	private var currentAttr : Dynamic;
	private var _err : Dynamic;
	private var getCurrentLocation : Dynamic;
	private var _runParsingLoop : Dynamic;
	function pause():Void;
	function resume(?writeCallback:() -> Void):Void;
	function write(chunk:String, isLastChunk:Bool, ?writeCallback:() -> Void):Void;
	function insertHtmlAtCurrentPos(chunk:String):Void;
	private var _ensureHibernation : Dynamic;
	private var _consume : Dynamic;
	private var _unconsume : Dynamic;
	private var _reconsumeInState : Dynamic;
	private var _advanceBy : Dynamic;
	private var _consumeSequenceIfMatch : Dynamic;
	private var _createStartTagToken : Dynamic;
	private var _createEndTagToken : Dynamic;
	private var _createCommentToken : Dynamic;
	private var _createDoctypeToken : Dynamic;
	private var _createCharacterToken : Dynamic;
	private var _createAttr : Dynamic;
	private var _leaveAttrName : Dynamic;
	private var _leaveAttrValue : Dynamic;
	private var prepareToken : Dynamic;
	private var emitCurrentTagToken : Dynamic;
	private var emitCurrentComment : Dynamic;
	private var emitCurrentDoctype : Dynamic;
	private var _emitCurrentCharacterToken : Dynamic;
	private var _emitEOFToken : Dynamic;
	private var _appendCharToCurrentCharacterToken : Dynamic;
	private var _emitCodePoint : Dynamic;
	private var _emitChars : Dynamic;
	private var _matchNamedCharacterReference : Dynamic;
	private var _isCharacterReferenceInAttribute : Dynamic;
	private var _flushCodePointConsumedAsCharacterReference : Dynamic;
	private var _callState : Dynamic;
	private var _stateData : Dynamic;
	private var _stateRcdata : Dynamic;
	private var _stateRawtext : Dynamic;
	private var _stateScriptData : Dynamic;
	private var _statePlaintext : Dynamic;
	private var _stateTagOpen : Dynamic;
	private var _stateEndTagOpen : Dynamic;
	private var _stateTagName : Dynamic;
	private var _stateRcdataLessThanSign : Dynamic;
	private var _stateRcdataEndTagOpen : Dynamic;
	private var handleSpecialEndTag : Dynamic;
	private var _stateRcdataEndTagName : Dynamic;
	private var _stateRawtextLessThanSign : Dynamic;
	private var _stateRawtextEndTagOpen : Dynamic;
	private var _stateRawtextEndTagName : Dynamic;
	private var _stateScriptDataLessThanSign : Dynamic;
	private var _stateScriptDataEndTagOpen : Dynamic;
	private var _stateScriptDataEndTagName : Dynamic;
	private var _stateScriptDataEscapeStart : Dynamic;
	private var _stateScriptDataEscapeStartDash : Dynamic;
	private var _stateScriptDataEscaped : Dynamic;
	private var _stateScriptDataEscapedDash : Dynamic;
	private var _stateScriptDataEscapedDashDash : Dynamic;
	private var _stateScriptDataEscapedLessThanSign : Dynamic;
	private var _stateScriptDataEscapedEndTagOpen : Dynamic;
	private var _stateScriptDataEscapedEndTagName : Dynamic;
	private var _stateScriptDataDoubleEscapeStart : Dynamic;
	private var _stateScriptDataDoubleEscaped : Dynamic;
	private var _stateScriptDataDoubleEscapedDash : Dynamic;
	private var _stateScriptDataDoubleEscapedDashDash : Dynamic;
	private var _stateScriptDataDoubleEscapedLessThanSign : Dynamic;
	private var _stateScriptDataDoubleEscapeEnd : Dynamic;
	private var _stateBeforeAttributeName : Dynamic;
	private var _stateAttributeName : Dynamic;
	private var _stateAfterAttributeName : Dynamic;
	private var _stateBeforeAttributeValue : Dynamic;
	private var _stateAttributeValueDoubleQuoted : Dynamic;
	private var _stateAttributeValueSingleQuoted : Dynamic;
	private var _stateAttributeValueUnquoted : Dynamic;
	private var _stateAfterAttributeValueQuoted : Dynamic;
	private var _stateSelfClosingStartTag : Dynamic;
	private var _stateBogusComment : Dynamic;
	private var _stateMarkupDeclarationOpen : Dynamic;
	private var _stateCommentStart : Dynamic;
	private var _stateCommentStartDash : Dynamic;
	private var _stateComment : Dynamic;
	private var _stateCommentLessThanSign : Dynamic;
	private var _stateCommentLessThanSignBang : Dynamic;
	private var _stateCommentLessThanSignBangDash : Dynamic;
	private var _stateCommentLessThanSignBangDashDash : Dynamic;
	private var _stateCommentEndDash : Dynamic;
	private var _stateCommentEnd : Dynamic;
	private var _stateCommentEndBang : Dynamic;
	private var _stateDoctype : Dynamic;
	private var _stateBeforeDoctypeName : Dynamic;
	private var _stateDoctypeName : Dynamic;
	private var _stateAfterDoctypeName : Dynamic;
	private var _stateAfterDoctypePublicKeyword : Dynamic;
	private var _stateBeforeDoctypePublicIdentifier : Dynamic;
	private var _stateDoctypePublicIdentifierDoubleQuoted : Dynamic;
	private var _stateDoctypePublicIdentifierSingleQuoted : Dynamic;
	private var _stateAfterDoctypePublicIdentifier : Dynamic;
	private var _stateBetweenDoctypePublicAndSystemIdentifiers : Dynamic;
	private var _stateAfterDoctypeSystemKeyword : Dynamic;
	private var _stateBeforeDoctypeSystemIdentifier : Dynamic;
	private var _stateDoctypeSystemIdentifierDoubleQuoted : Dynamic;
	private var _stateDoctypeSystemIdentifierSingleQuoted : Dynamic;
	private var _stateAfterDoctypeSystemIdentifier : Dynamic;
	private var _stateBogusDoctype : Dynamic;
	private var _stateCdataSection : Dynamic;
	private var _stateCdataSectionBracket : Dynamic;
	private var _stateCdataSectionEnd : Dynamic;
	private var _stateCharacterReference : Dynamic;
	private var _stateNamedCharacterReference : Dynamic;
	private var _stateAmbiguousAmpersand : Dynamic;
	private var _stateNumericCharacterReference : Dynamic;
	private var _stateHexademicalCharacterReferenceStart : Dynamic;
	private var _stateHexademicalCharacterReference : Dynamic;
	private var _stateDecimalCharacterReference : Dynamic;
	private var _stateNumericCharacterReferenceEnd : Dynamic;
	static var prototype : Tokenizer;
}